@using NPAManagement.ValidationFilters;
@model NPAManagement.Models.CollateralDetailInCaseOfCorporateGuarantee
@if (this.ViewContext.FormContext == null)
{
    this.ViewContext.FormContext = new FormContext();
}
@{
    bool viewOnlyUser = false;
    if (ViewBag.ViewOnlyUser != null)
    {
        viewOnlyUser = (bool)ViewBag.ViewOnlyUser;
    }
}
@{string idValueToAttach = $"_{new Random().Next(1000, 9999)}{new Random().Next(1000, 9999)}{new Random().Next(10000, 99999)}{new Random().Next(1000, 9999)}";}
<div id="dvCollateralDetailCorporateGuarantee@(idValueToAttach)">
    <br />
    <div class="card">
        <div class="card-header" data-toggle="collapse" data-target="#collapseCollateralDetailCorporateGuarantee@(idValueToAttach)" aria-expanded="true" aria-controls="collapseCollateralDetailCorporateGuarantee@(idValueToAttach)">
            <h3>
                Corporate Guarantee Collateral Detail
            </h3>
        </div>
        <div class="collapse show" id="collapseCollateralDetailCorporateGuarantee@(idValueToAttach)">
            <div class="card-body">
                @*@Html.HiddenFor(m => m.CollateralDetailMainId)*@
                <div class="form-row">
                    @Html.LabelFor(model => model.NameOfFirm, htmlAttributes: new { @class = "control-label col-md-3 required" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.NameOfFirm, new { htmlAttributes = new { @class = "form-control", @data_Model = "NameOfFirm", Name = "NameOfFirm" + (idValueToAttach) }.DisabledIf(viewOnlyUser == true) })
                        @Html.ValidationMessageFor(model => model.NameOfFirm, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.RegistrationNumber, htmlAttributes: new { @class = "control-label col-md-3 required" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.RegistrationNumber, new { htmlAttributes = new { @class = "form-control", @data_Model = "RegistrationNumber", Name = "RegistrationNumber" + (idValueToAttach) }.DisabledIf(viewOnlyUser == true) })
                        @Html.ValidationMessageFor(model => model.RegistrationNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr />
                <div class="form-row">
                    @Html.LabelFor(model => model.FirmAddress, htmlAttributes: new { @class = "control-label col-md-3 required" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.FirmAddress, new { htmlAttributes = new { @class = "form-control", @data_Model = "FirmAddress", Name = "FirmAddress" + (idValueToAttach) }.DisabledIf(viewOnlyUser == true) })
                        @Html.ValidationMessageFor(model => model.FirmAddress, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.NetworthOfTheFirm, htmlAttributes: new { @class = "control-label col-md-3 required" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.NetworthOfTheFirm, new { htmlAttributes = new { @class = "form-control decimalType", @data_Model = "NetworthOfTheFirm" }.DisabledIf(viewOnlyUser == true) })
                        @Html.ValidationMessageFor(model => model.NetworthOfTheFirm, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr />
                <div class="form-row">
                    @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label col-md-3 required" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control", @data_Model = "ContactPerson" }.DisabledIf(viewOnlyUser == true) })
                        @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-3 required" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control", @data_Model = "ContactNumber" }.DisabledIf(viewOnlyUser == true) })
                        @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    $(document).ready(function () {
        $('.decimalType').toArray().forEach(function (field) {
            new Cleave(field, {
                numeral: true,
                numeralThousandsGroupStyle: 'thousand'
            });
        });
    });
</script>
