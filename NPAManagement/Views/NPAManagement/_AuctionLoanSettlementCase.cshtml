@model NPAManagement.Models.LoanSettlementDetail
@*@if (this.ViewContext.FormContext == null)
{
    this.ViewContext.FormContext = new FormContext();
}*@
@Html.AntiForgeryToken()
<div class="card">
    <div class="card-header" data-toggle="collapse" data-target="#collapseLoanSettlementDetail" aria-expanded="true" aria-controls="collapseLoanSettlementDetail">
        <h3>
            Loan Settlement Detail
        </h3>
    </div>
    <div class="collapse show" id="collapseLoanSettlementDetail">
        <div class="card-body">
            <div class="form-row">
                @Html.LabelFor(model => model.DateOfSettlement, htmlAttributes: new { @class = "control-label col-md-3 required" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.DateOfSettlement, new { htmlAttributes = new { @class = "form-control date", @readOnly = "readOnly" } })
                    @Html.ValidationMessageFor(model => model.DateOfSettlement, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.AmountSettled, htmlAttributes: new { @class = "control-label col-md-3 required" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.AmountSettled, new { htmlAttributes = new { @class = "form-control decimalType" } })
                    @Html.ValidationMessageFor(model => model.AmountSettled, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            <div class="form-row">
                @Html.LabelFor(model => model.RemainingAmount, htmlAttributes: new { @class = "control-label col-md-3 required" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.RemainingAmount, new { htmlAttributes = new { @class = "form-control decimalType" } })
                    @Html.ValidationMessageFor(model => model.RemainingAmount, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.NextActionToBeTaken, htmlAttributes: new { @class = "control-label col-md-3 required" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.NextActionToBeTaken, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NextActionToBeTaken, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            <div class="form-row">
                @Html.LabelFor(model => model.DueDateOfNextAction, htmlAttributes: new { @class = "control-label col-md-3 required" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.DueDateOfNextAction, new { htmlAttributes = new { @class = "form-control date", @readOnly = "readOnly" } })
                    @Html.ValidationMessageFor(model => model.DueDateOfNextAction, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    $(document).ready(function () {
        $(".date").datepicker({
            dateFormat: 'yy/mm/dd',
            changeMonth: true,
            changeYear: true
        });
        $('.decimalType').toArray().forEach(function (field) {
            new Cleave(field, {
                numeral: true,
                numeralThousandsGroupStyle: 'thousand'
            });
        });
    });
</script>